ifelse(source == 4, ".edu",
ifelse(source == 5, "Other",
NA))))))
# calculate scores -------------------------------------------------
# E = Extraversion
big5$extraversion <- rowSums(big5[,grep("E[0-9]{1,2}", names(big5))])
# A = Agreeableness
big5$agreeableness <- rowSums(big5[,grep("A[0-9]{1,2}", names(big5))])
# C = Conscientiousness
big5$conscientiousness <- rowSums(big5[,grep("C[0-9]{1,2}", names(big5))])
# N = Emotional Stability
big5$emotional_stability <- rowSums(big5[,grep("N[0-9]{1,2}", names(big5))])
# O = Intellect/Imagination
big5$intellect_imagination <- rowSums(big5[,grep("O[0-9]{1,2}", names(big5))])
View(big5)
big5[1,]
big5[1, 8:57]
big5 <- big5 %>%
mutate(extaversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
summary(big5$extraversion)
# Cleanup steps based on codebook and
# scoring instructions from http://ipip.ori.org/newScoringInstructions.htm.
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
# age --------------------------------------------------------------
big5 <- filter(big5, age < 120) # reasonable ages only
# engnat -----------------------------------------------------------
big5 <- big5 %>%
mutate(engnat = ifelse(engnat == 1, "Native english",
ifelse(engnat == 2, "Non-native english",
NA)))
# gender -----------------------------------------------------------
big5 <- big5 %>%
mutate(gender = ifelse(gender == 1, "Male",
ifelse(gender == 2, "Female",
ifelse(gender == 3, "Other",
NA))))
# hand -------------------------------------------------------------
big5 <- big5 %>%
mutate(hand = ifelse(hand == 1, "Right",
ifelse(hand == 2, "Left",
ifelse(hand == 3, "Both",
NA))))
# source -----------------------------------------------------------
big5 <- big5 %>%
mutate(source = ifelse(source == 1, "Test website",
ifelse(source == 2, "Google",
ifelse(source == 3, "Facebook",
ifelse(source == 4, ".edu",
ifelse(source == 5, "Other",
NA))))))
big5 <- big5 %>%
mutate(extaversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
summary(big5$extraversion)
big5 <- big5 %>%
mutate(extraversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
summary(big5$extraversion)
big5 <- big5 %>%
mutate(agreeableness = 14 - A1 + A2 - A3 + A4 - A5 + A6 - A7 + A8 + A9)
summary(big5$agreeableness)
big5 <- big5 %>%
mutate(agreeableness = 14 - A1 + A2 - A3 + A4 - A5 + A6 - A7 + A8 + A9 + A10)
summary(big5$agreeableness)
# Cleanup steps based on codebook and
# scoring instructions from http://ipip.ori.org/newScoringInstructions.htm.
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
# age --------------------------------------------------------------
big5 <- filter(big5, age < 120) # reasonable ages only
# engnat -----------------------------------------------------------
big5 <- big5 %>%
mutate(engnat = ifelse(engnat == 1, "Native english",
ifelse(engnat == 2, "Non-native english",
NA)))
# gender -----------------------------------------------------------
big5 <- big5 %>%
mutate(gender = ifelse(gender == 1, "Male",
ifelse(gender == 2, "Female",
ifelse(gender == 3, "Other",
NA))))
# hand -------------------------------------------------------------
big5 <- big5 %>%
mutate(hand = ifelse(hand == 1, "Right",
ifelse(hand == 2, "Left",
ifelse(hand == 3, "Both",
NA))))
# source -----------------------------------------------------------
big5 <- big5 %>%
mutate(source = ifelse(source == 1, "Test website",
ifelse(source == 2, "Google",
ifelse(source == 3, "Facebook",
ifelse(source == 4, ".edu",
ifelse(source == 5, "Other",
NA))))))
# calculate scores -------------------------------------------------
# based on http://personality-testing.info/printable/big-five-personality-test.pdf
# E = Extraversion
big5 <- big5 %>%
mutate(extraversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
# A = Agreeableness
big5 <- big5 %>%
mutate(agreeableness = 14 - A1 + A2 - A3 + A4 - A5 + A6 - A7 + A8 + A9 + A10)
# C = Conscientiousness
big5 <- big5 %>%
mutate(conscientiousness = 14 + C1 - C2 + C3 - C4 + C5 - C6 + C7 - C8 + C9 + C10)
# N = Emotional Stability
big5 <- big5 %>%
mutate(emotional_stability = 38 - N1 + N2 - N3 + N4 - N5 - N6 - N7 - N8 - N9 - N10)
# O = Intellect/Imagination
big5 <- big5 %>%
mutate(intellect_imagination = 8 + O1 - O2 + O3 - O4 + O5 - O6 + O7 + O8 + O9 + O10)
summary(big5$agreeableness)
summary(big5$conscientiousness)
summary(big5$emotional_stability)
summary(big5$intellect_imagination)
summary(big5$extraversion)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
# age --------------------------------------------------------------
big5 <- filter(big5, age < 120) # reasonable ages only
# engnat -----------------------------------------------------------
big5 <- big5 %>%
mutate(engnat = ifelse(engnat == 1, "Native english",
ifelse(engnat == 2, "Non-native english",
NA)))
# gender -----------------------------------------------------------
big5 <- big5 %>%
mutate(gender = ifelse(gender == 1, "Male",
ifelse(gender == 2, "Female",
ifelse(gender == 3, "Other",
NA))))
# hand -------------------------------------------------------------
big5 <- big5 %>%
mutate(hand = ifelse(hand == 1, "Right",
ifelse(hand == 2, "Left",
ifelse(hand == 3, "Both",
NA))))
# source -----------------------------------------------------------
big5 <- big5 %>%
mutate(source = ifelse(source == 1, "Test website",
ifelse(source == 2, "Google",
ifelse(source == 3, "Facebook",
ifelse(source == 4, ".edu",
ifelse(source == 5, "Other",
NA))))))
# calculate scores -------------------------------------------------
# based on
# 1. http://personality-testing.info/printable/big-five-personality-test.pdf
# 2. http://ipip.ori.org/newScoringInstructions.htm.
# E = Extraversion
big5 <- big5 %>%
mutate(extraversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
# A = Agreeableness
big5 <- big5 %>%
mutate(agreeableness = 14 - A1 + A2 - A3 + A4 - A5 + A6 - A7 + A8 + A9 + A10)
# C = Conscientiousness
big5 <- big5 %>%
mutate(conscientiousness = 14 + C1 - C2 + C3 - C4 + C5 - C6 + C7 - C8 + C9 + C10)
# N = Emotional Stability
big5 <- big5 %>%
mutate(emotional_stability = 38 - N1 + N2 - N3 + N4 - N5 - N6 - N7 - N8 - N9 - N10)
# O = Intellect/Imagination
big5 <- big5 %>%
mutate(intellect_imagination = 8 + O1 - O2 + O3 - O4 + O5 - O6 + O7 + O8 + O9 + O10)
big5 <- big5 %>%
select(-race)
View(big5)
big5 <- big5 %>%
select(-race) %>%
rename(race_code = race)
big5 <- big5 %>%
select(-race) %>%
rename(race = race_string)
big5 <- big5 %>%
select(-race) %>%
rename(race_string = race)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
big5 <- big5 %>%
select(-race)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
big5 <- big5 %>%
select(-race) %>%
rename(race_string = race)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
big5 <- big5 %>%
select(-race) %>%
rename(race = race_string)
View(big5)
View(big5)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
# remove coded race variable
big5 <- big5 %>%
select(-race) %>%
rename(race = race_string) %>%
select(race, age:O10)
View(big5)
# load packages -----------------------------------------------------
library(dplyr)
library(ggplot2)
# load data ---------------------------------------------------------
big5 <- read.delim("../raw-data/big5.csv", stringsAsFactors = FALSE)
# check sample size is 19,719 as stated in README -------------------
if(nrow(big5) != 19719) { print("Sample size doesn't match README!") }
# race --------------------------------------------------------------
race_code <- matrix(c(1, "Mixed Race",
2, "Arctic",
3, "Caucasian (European)",
4, "Caucasian (Indian)",
5, "Caucasian (Middle East)",
6, "Caucasian (North African, Other)",
7, "Indigenous Australian",
8, "Native American",
9, "North East Asian",
10, "Pacific",
11, "South East Asian",
12, "West African, Bushmen, Ethiopian",
13, "Other",
0, NA), ncol = 2, byrow = TRUE)
race_code <- data.frame(race = as.numeric(as.character(race_code[,1])),
race_string = race_code[,2])
big5 <- left_join(big5, race_code)
# remove coded race variable
big5 <- big5 %>%
select(-race) %>%
rename(race = race_string) %>%
select(race, age:O10)
# age --------------------------------------------------------------
big5 <- filter(big5, age < 120) # reasonable ages only
# engnat -----------------------------------------------------------
big5 <- big5 %>%
mutate(engnat = ifelse(engnat == 1, "Native english",
ifelse(engnat == 2, "Non-native english",
NA)))
# gender -----------------------------------------------------------
big5 <- big5 %>%
mutate(gender = ifelse(gender == 1, "Male",
ifelse(gender == 2, "Female",
ifelse(gender == 3, "Other",
NA))))
# hand -------------------------------------------------------------
big5 <- big5 %>%
mutate(hand = ifelse(hand == 1, "Right",
ifelse(hand == 2, "Left",
ifelse(hand == 3, "Both",
NA))))
# source -----------------------------------------------------------
big5 <- big5 %>%
mutate(source = ifelse(source == 1, "Test website",
ifelse(source == 2, "Google",
ifelse(source == 3, "Facebook",
ifelse(source == 4, ".edu",
ifelse(source == 5, "Other",
NA))))))
# calculate scores -------------------------------------------------
# based on
# 1. http://personality-testing.info/printable/big-five-personality-test.pdf
# 2. http://ipip.ori.org/newScoringInstructions.htm.
# E = Extraversion
big5 <- big5 %>%
mutate(extraversion = 20 + E1 - E2 + E3 - E4 + E5 - E6 + E7 - E8 + E9 - E10)
# A = Agreeableness
big5 <- big5 %>%
mutate(agreeableness = 14 - A1 + A2 - A3 + A4 - A5 + A6 - A7 + A8 + A9 + A10)
# C = Conscientiousness
big5 <- big5 %>%
mutate(conscientiousness = 14 + C1 - C2 + C3 - C4 + C5 - C6 + C7 - C8 + C9 + C10)
# N = Emotional Stability
big5 <- big5 %>%
mutate(emotional_stability = 38 - N1 + N2 - N3 + N4 - N5 - N6 - N7 - N8 - N9 - N10)
# O = Intellect/Imagination
big5 <- big5 %>%
mutate(intellect_imagination = 8 + O1 - O2 + O3 - O4 + O5 - O6 + O7 + O8 + O9 + O10)
big5 <- read.delim("raw-data/big5.txt")
setwd("~/Desktop/Talks:Conferences/2016-01-11-reproducible-research-unc")
big5 <- read.delim("raw-data/big5.txt")
View(big5)
ggplot(data = big5, aes(x = age, y = extraversion, fill = gender)) +
geom_point() +
stat_smooth("lm")
View(big5)
source("code/01-data-cleanup.R")
ggplot(data = big5, aes(x = age, y = extraversion, fill = gender)) +
geom_point() +
stat_smooth("lm")
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point() +
stat_smooth("lm")
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
stat_smooth(method = "lm")
table(big5$gender, useNA = "ifany")
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
stat_smooth(method = "lm", na.rm = TRUE)
sessionInfo()
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm")
ggplot(data = big5, aes(x = age, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", na.rm = TRUE)
ggplot(data = big5, aes(x = Agreeableness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5, aes(x = agreeableness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5_teen, aes(x = agreeableness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
big5_teen <- filter(big5, age <= 19)
View(big5)
big5_teen <- filter(big5, age <= 19)
library(dplyr)
big5_teen <- filter(big5, age <= 19)
ggplot(data = big5_teen, aes(x = agreeableness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5, aes(x = opennness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5, aes(x = openness, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5, aes(x = neuroticism, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = big5_teen, aes(x = neuroticism, y = extraversion, color = gender)) +
geom_point(alpha = 0.5) +
geom_jitter() +
geom_smooth(method = "lm")
?options
options()
View(big5)
